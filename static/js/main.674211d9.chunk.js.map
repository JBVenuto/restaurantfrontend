{"version":3,"sources":["components/Container.js","components/Title.js","components/NotVisited.js","components/Visited.js","components/NewRestaurant.js","components/Modal.js","App.js","index.js"],"names":["Container","props","react_default","a","createElement","className","children","Title","NotVisited","id","key","name","type","restnum","visited-status","visited","onClick","Visited","visitAgain","NewRestaurant","onSubmit","value","onChange","Modal","visitedRestaurant","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visitRestaurant","event","restid","parseInt","target","getAttribute","console","log","concat","state","justVisited","Number","isInteger","fetch","changeRestaurants","restaurants","restIndex","map","x","indexOf","setState","modalVisible","restaurantRated","tempValue","visitedId","changeRating","rateRestaurant","components_Modal","visible","handleChange","restaurantName","addRestaurant","newRestName","preventDefault","method","headers","Content-type","body","getRestaurants","bind","assertThisInitialized","_this2","then","res","json","data","_this3","components_Container","components_Title","components_NewRestaurant","components_NotVisited","components_Visited","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.674211d9.chunk.js","sourcesContent":["import React from \"react\";\n// import \"./Container.css\";\n\nconst Container = props => \n\n    <div className=\"container\">\n        {props.children}\n    </div>;\n\nexport default Container;","import React from \"react\";\n\nconst Title = () => \n\n    <div className=\"title\">\n        <h1>Restaurant Tracker</h1>\n        <p>Keep track of all the restaurants you want to try</p>\n    </div>;\n\nexport default Title;","import React from \"react\";\n\nconst NotVisited = (props) => (\n    <div className=\"card\" id=\"notVisitedCards\">\n        <div className=\"card-body\">\n            <span\n                id=\"cardBodyText\"\n                key={props.key}\n            >\n                {props.name}\n            </span>\n            <button \n                key={props.key}\n                className=\"btn btn-secondary\"\n                id=\"visit-button\"\n                type=\"button\"\n                restnum={props.id}\n                visited-status={props.visited}\n                onClick={props.onClick}\n            >\n                Visited\n            </button>\n        </div>\n    </div>   \n);\n\nexport default NotVisited;","import React from \"react\";\n\n\nconst Visited = (props) => {\n        return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                <span\n                        id=\"cardVisitedText\"\n                > \n                        {props.name}\n                </span>\n                <span className=\"returnChoice\">\n                    {props.visitAgain ? \n                        \"You liked this place\" \n                    : \n                        \"You didn't like this place\"\n                    }\n                </span>\n                </div>\n            </div> \n        )\n};\n\nexport default Visited;","import React from \"react\";\n\nconst NewRestaurant = (props) => (\n    <form onSubmit={props.onSubmit}>\n        <input \n            type=\"text\" \n            name=\"newRestaurantName\" \n            className=\"restaurantInput\"\n            value={props.value}\n            onChange={props.onChange}\n        /><br></br>\n        <input \n            type=\"submit\" \n            className=\"btn btn-secondary\"\n            id=\"btn-submit\"\n            onClick={props.onClick}\n            value=\"Add Restaurant\"\n        />\n            {/* Add Restaurant */}\n        {/* </input> */}\n    </form>\n);\n\nexport default NewRestaurant;","import React from \"react\";\r\n\r\nconst Modal = (props) => (\r\n    <div className=\"modalBackground\">\r\n        <div className=\" container modalBody\">\r\n            <h3>Would you go back to {props.visitedRestaurant}</h3>\r\n            <form className=\"modalForm\" name=\"returnToRest\" onClick={props.onClick}>\r\n                <label className=\"radioInput\" value=\"1\">\r\n                    <input type=\"radio\" value=\"1\" name=\"returnChoice\" />  Yes \r\n                </label>\r\n                <label className=\"radioInput\" value=\"0\">\r\n                    <input type=\"radio\" value=\"0\" name=\"returnChoice\" />  No \r\n                </label>\r\n\r\n                {/* <button  */}\r\n                {/* // key={props.key} */}\r\n                {/* className=\"btn btn-secondary\" */}\r\n                {/* id=\"rate-button\" */}\r\n                {/* type=\"submit\" */}\r\n                {/* // restnum={props.id} */}\r\n                {/* // visited-status={props.visited} */}\r\n                {/* // onClick={props.onClick} */}\r\n            {/* > */}\r\n                {/* Rate */}\r\n            {/* </button> */}\r\n            </form>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Modal;","// Import React and the main style sheet\nimport React, { Component } from 'react';\nimport './App.css';\n\n// Components to be imported\nimport Container from \"./components/Container\"\nimport Title from \"./components/Title\";\nimport NotVisited from \"./components/NotVisited\";\nimport Visited from \"./components/Visited\";\nimport NewRestaurant from \"./components/NewRestaurant\";\nimport Modal from \"./components/Modal\";\n\nclass App extends Component {\n  // Constructor to give state to the component.\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: [],\n      restaurantName: '',\n      justVisited: 0,\n      modalVisible: false\n    };\n\n    // Bind the functions that will be used in the app\n    this.visitRestaurant = this.visitRestaurant.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addRestaurant = this.addRestaurant.bind(this);\n    this.restaurantRated = this.restaurantRated.bind(this);\n  }\n\n  componentDidMount () {\n    this.getRestaurants();\n  }\n\n  // Function to get the restaurants and set them to the state\n  getRestaurants () {\n    console.log('starting get restaurants')\n    // fetch('http://localhost:8080/api/restaurants')\n    fetch('https://infinite-thicket-79992.herokuapp.com/api/restaurants')\n    // .then(res => console.log(\"made the fetch\"))\n    .then(res => res.json())\n    .then(res => this.setState({ restaurants: res.data }))  \n    // .then(() => console.log(this.state.restaurants));  \n  }\n\n  // Function to update the visited status of a restaurant\n  visitRestaurant = event => {\n    let restid = parseInt(event.target.getAttribute('restnum'));\n    console.log(`justVisited: ${this.state.justVisited}`);\n    console.log(event.target);\n    console.log(Number.isInteger(event.target.getAttribute('restnum')));\n    console.log(Number.isInteger(restid));\n    console.log(event.target.className);\n    // fetch(`http://localhost:8080/api/restaurants/${restid}`);\n    fetch(`https://infinite-thicket-79992.herokuapp.com/api/restaurants/${restid}`);\n\n    // Change visited status\n    let changeRestaurants = this.state.restaurants;\n    console.log(changeRestaurants);\n    let restIndex = changeRestaurants.map(function(x) {return x.id; }).indexOf(restid);\n    this.setState ({ justVisited: restIndex });\n    console.log(`restaurant index is ${restIndex}`);\n    changeRestaurants[restIndex].visited = 1;\n    console.log(changeRestaurants);\n\n    this.setState({ restaurants: changeRestaurants });\n\n    // Open modal to rate restaurant\n    let modalVisible = !this.state.modalVisible;\n    this.setState ({ modalVisible: modalVisible});\n  }\n\n  restaurantRated = event =>{\n    console.log(event.target.getAttribute('value'));\n    let tempValue = parseInt(event.target.getAttribute('value'));\n    let visitedId = this.state.restaurants[this.state.justVisited].id;\n\n    if (tempValue === 0) {\n      // Change the rating in the state if needed\n      let changeRating = this.state.restaurants;\n      changeRating[this.state.justVisited].visitAgain = 0;\n      this.setState ({ restaurants: changeRating });\n\n      // Change the rating in the database\n      // fetch(`http://localhost:8080/api/restaurants/rate/${visitedId}`);\n      fetch(`https://infinite-thicket-79992.herokuapp.com/api/restaurants/rate/${visitedId}`);\n    }\n    // Change the visibility of the modal\n    let modalVisible = !this.state.modalVisible;\n    this.setState ({ modalVisible: modalVisible});\n  }\n\n  rateRestaurant = event => {\n    if (this.state.modalVisible) {\n      return <Modal \n        visible={this.state.modalVisible}\n        onClick={this.restaurantRated}\n        visitedRestaurant={this.state.restaurants[this.state.justVisited].name}\n        restIndex={this.state.justVisited}\n      />;\n    }\n    else return <div></div>;\n  }\n\n  handleChange = event => {\n    this.setState({ restaurantName: event.target.value });\n  }\n\n  // Function to add a new restaurant to the list of not visited restaurants\n  addRestaurant = event => {\n    console.log('add button clicked!');\n    console.log(`Restaurant Name: ${this.state.restaurantName}`);\n    console.log(event);\n    let newRestName = this.state.restaurantName;\n    event.preventDefault();\n    // fetch('http://localhost:8080/api/restaurants/create', {\n    fetch('https://infinite-thicket-79992.herokuapp.com/api/restaurants/create', {\n      method: 'POST',\n      headers: {'Content-type': 'application/x-www-form-urlencoded'},\n      body: (newRestName)\n    })\n    // Update the restaurant list based on the database\n    this.getRestaurants();\n  }\n\n  render() {\n    return (\n      <div className=\"all\">\n      <Container id=\"containerId\">\n        <Title />\n        <div className=\"row\">\n          <div className=\"newRestaurantForm\">\n            <NewRestaurant\n              value={this.state.value}\n              onSubmit={this.addRestaurant}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>   \n\n        <div className=\"row\">\n          <div className=\"col\">\n            <h3>Not Visited Restaurants</h3>\n             {this.state.restaurants.map( restaurants => { return !restaurants.visited ?\n              <NotVisited \n                className=\"notVisitedCards\"\n                key={restaurants.key}\n                id={restaurants.id}\n                name={restaurants.name}\n                visited={restaurants.visited}\n                visitAgain={restaurants.visitAgain}  \n                onClick={this.visitRestaurant}             \n              /> : <div />\n              }\n             )} \n          </div>\n          <div className=\"col\">\n            <h3>Visited Restaurants</h3>\n            {this.state.restaurants.map( restaurants => { return restaurants.visited ?\n              <Visited \n                id={restaurants.id}\n                key={restaurants.key}\n                name={restaurants.name}\n                visited={restaurants.visited}\n                visitAgain={restaurants.visitAgain}               \n              /> : <div />\n              }\n            )}\n          </div>\n        </div>    \n        <br></br> \n        </Container> \n\n        <this.rateRestaurant \n          // visible={this.state.modalVisible}\n          // onChange={this.restaurantRated}\n        />\n         \n      {/* </Container>  */}\n       </div> \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}
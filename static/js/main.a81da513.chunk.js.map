{"version":3,"sources":["components/Container.js","components/Title.js","components/NotVisited.js","components/Visited.js","components/NewRestaurant.js","App.js","index.js"],"names":["Container","props","react_default","a","createElement","className","children","Title","NotVisited","id","key","name","type","restnum","visited-status","visited","onClick","Visited","NewRestaurant","onSubmit","value","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visitRestaurant","event","restid","parseInt","target","getAttribute","console","log","Number","isInteger","fetch","concat","changeRestaurants","state","restaurants","restIndex","map","x","indexOf","setState","handleChange","restaurantName","addRestaurant","newRestName","preventDefault","method","headers","Content-type","body","getRestaurants","bind","assertThisInitialized","_this2","then","res","json","data","_this3","components_Container","components_Title","components_NewRestaurant","components_NotVisited","visitAgain","components_Visited","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a81da513.chunk.js","sourcesContent":["import React from \"react\";\n// import \"./Container.css\";\n\nconst Container = props => \n\n    <div className=\"container\">\n        {props.children}\n    </div>;\n\nexport default Container;","import React from \"react\";\n\nconst Title = () => \n\n    <div className=\"title\">\n        <h1>Restaurant Tracker</h1>\n        <p>Keep track of all the restaurants you want to try</p>\n    </div>;\n\nexport default Title;","import React from \"react\";\n\nconst NotVisited = (props) => (\n    <div className=\"card\" id=\"notVisitedCards\">\n        <div className=\"card-body\">\n            <span\n                id=\"cardBodyText\"\n                key={props.key}\n            >\n                {props.name}\n            </span>\n            <button \n                key={props.key}\n                className=\"btn btn-secondary\"\n                id=\"visit-button\"\n                type=\"button\"\n                restnum={props.id}\n                visited-status={props.visited}\n                onClick={props.onClick}\n            >\n                Visited\n            </button>\n        </div>\n    </div>   \n);\n\nexport default NotVisited;","import React from \"react\";\n\n\nconst Visited = (props) => (\n    <div className=\"card\">\n        <div className=\"card-body\">\n           <span\n                id=\"cardVisitedText\"\n           > \n                {props.name}\n           </span>\n        </div>\n    </div> \n);\n\nexport default Visited;","import React from \"react\";\r\n\r\nconst NewRestaurant = (props) => (\r\n    <form onSubmit={props.onSubmit}>\r\n        <input \r\n            type=\"text\" \r\n            name=\"newRestaurantName\" \r\n            className=\"restaurantInput\"\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n        />\r\n        <input \r\n            type=\"submit\" \r\n            className=\"btn btn-secondary\"\r\n            onClick={props.onClick}\r\n            value=\"Add Restaurant\"\r\n        />\r\n            {/* Add Restaurant */}\r\n        {/* </input> */}\r\n    </form>\r\n);\r\n\r\nexport default NewRestaurant;","// Import React and the main style sheet\nimport React, { Component } from 'react';\nimport './App.css';\n\n// Components to be imported\nimport Container from \"./components/Container\"\nimport Title from \"./components/Title\";\nimport NotVisited from \"./components/NotVisited\";\nimport Visited from \"./components/Visited\";\nimport NewRestaurant from \"./components/NewRestaurant\";\n\nclass App extends Component {\n  // Constructor to give state to the component.\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: [],\n      restaurantName: ''\n    };\n\n    // Bind the functions that will be used in the app\n    this.visitRestaurant = this.visitRestaurant.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addRestaurant = this.addRestaurant.bind(this);\n  }\n\n  componentDidMount () {\n    this.getRestaurants();\n  }\n\n  // Function to get the restaurants and set them to the state\n  getRestaurants () {\n    fetch('/api/restaurants')\n    .then(res => res.json())\n    .then(res => this.setState({ restaurants: res.data }))    \n  }\n\n  // Function to update the visited status of a restaurant\n  visitRestaurant = event => {\n    let restid = parseInt(event.target.getAttribute('restnum'));\n    console.log(event.target);\n    console.log(Number.isInteger(event.target.getAttribute('restnum')));\n    console.log(Number.isInteger(restid));\n    console.log(event.target.className);\n    fetch(`/api/restaurants/${restid}`);\n\n    // Change visited status\n    let changeRestaurants = this.state.restaurants;\n    console.log(changeRestaurants);\n    let restIndex = changeRestaurants.map(function(x) {return x.id; }).indexOf(restid);\n    console.log(restIndex);\n    changeRestaurants[restIndex].visited = 1;\n    console.log(changeRestaurants);\n\n    this.setState({ restaurants: changeRestaurants });\n  }\n\n  handleChange = event => {\n    this.setState({ restaurantName: event.target.value });\n  }\n\n  // Function to add a new restaurant to the list of not visited restaurants\n  addRestaurant = event => {\n    console.log('add button clicked!');\n    console.log(`Restaurant Name: ${this.state.restaurantName}`);\n    console.log(event);\n    let newRestName = this.state.restaurantName;\n    event.preventDefault();\n    fetch('/api/restaurants/create', {\n      method: 'POST',\n      headers: {'Content-type': 'application/x-www-form-urlencoded'},\n      body: (newRestName)\n    })\n    // Update the restaurant list based on the database\n    this.getRestaurants();\n  }\n\n  render() {\n    return (\n      <div className=\"all\">\n      <Container id=\"containerId\">\n        <Title />\n        <div className=\"row\">\n          <div className=\"newRestaurantForm\">\n            <NewRestaurant\n              value={this.state.value}\n              onSubmit={this.addRestaurant}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>   \n\n        <div className=\"row\">\n          <div className=\"col\">\n            <h3>Not Visited Restaurants</h3>\n             {this.state.restaurants.map( restaurants => { return !restaurants.visited ?\n              <NotVisited \n                className=\"notVisitedCards\"\n                key={restaurants.key}\n                id={restaurants.id}\n                name={restaurants.name}\n                visited={restaurants.visited}\n                visitAgain={restaurants.visitAgain}  \n                onClick={this.visitRestaurant}             \n              /> : <div />\n              }\n             )} \n          </div>\n          <div className=\"col\">\n            <h3>Visited Restaurants</h3>\n            {this.state.restaurants.map( restaurants => { return restaurants.visited ?\n              <Visited \n                id={restaurants.id}\n                key={restaurants.key}\n                name={restaurants.name}\n                visited={restaurants.visited}\n                visitAgain={restaurants.visitAgain}               \n              /> : <div />\n              }\n            )}\n          </div>\n        </div>    \n        <br></br> \n        {/* <div className=\"row\">\n          <div className=\"col\">\n            <NewRestaurant\n              value={this.state.value}\n              onSubmit={this.addRestaurant}\n              onChange={this.handleChange}\n            />\n          </div>\n        </div>          */}\n         \n      </Container> \n       </div> \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}